ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9
aa <- list(list(0.2, 0.1), list(0.7, 0.05), list(0.45, 0.2))
p9 <- ggplot(data.frame(x = c(0, 1)), aes(x = x))
for (i in 1:3) {
p9 <- p9 + stat_function(fun = dnorm, args = aa[[i]],
aes(colour = paste("Group", i)))
}
p9 <- p9 +
scale_x_continuous(name = "Probability",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Frequency") +
ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9
aa <- list(list(0.2, 0.1), list(0.7, 0.05), list(0.45, 0.2))
p9 <- ggplot(data.frame(x = c(0, 1)), aes(x = x))
for (i in 1:3) {
s <- paste("Group", i)
p9 <- p9 + stat_function(fun = dnorm, args = aa[[i]],
aes(colour = s))
}
p9 <- p9 +
scale_x_continuous(name = "Probability",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Frequency") +
ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9
?aes
p9 <- ggplot(data.frame(x = c(0, 1)), aes(x = x))
for (i in 1:3) {
s <- paste("Group", i)
p9 <- p9 + stat_function(fun = dnorm, args = aa[[i]],
aes_(colour = s))
}
p9 <- p9 +
scale_x_continuous(name = "Probability",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Frequency") +
ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9
aa <- list(list(0.2, 0.1), list(0.7, 0.05), list(0.45, 0.2))
p9 <- ggplot(data.frame(x = c(0, 1)), aes(x = x))
for (i in 1:3) {
p9 <- p9 + stat_function(fun = dnorm, args = aa[[i]],
aes_(colour = paste("Group", i)))
}
p9 <- p9 +
scale_x_continuous(name = "Probability",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Frequency") +
ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9
?Reduce
p9$layers
aa <- list(list(0.2, 0.1), list(0.7, 0.05), list(0.45, 0.2))
p9 <- Reduce(function(x, y){
x + stat_function(fun = dnorm, args = y,
aes_(colour = paste("Group", length(x$layers)+1)))},
aa,
init = ggplot(data.frame(x = c(0, 1)), aes(x = x)))
p9 <- p9 +
scale_x_continuous(name = "Probability",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Frequency") +
ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9
source('/media/checo/7B2C787106E895ED/PROY.CONACYT/ExtrasUsumacinta.R')
ff0 <- creaCumFuncts(dd$precProm, creaGamma)
ff0
?Reduce
source('/media/checo/7B2C787106E895ED/PROY.CONACYT/ExtrasUsumacinta.R')
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = paste("Group", y)))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm), aes(x = x)))
)
p9 <- p9 +
scale_x_continuous(name = "Probability",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Frequency") +
ggtitle("Normal function curves of probabilities") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Groups")
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm), aes(x = x)))
)
Mes <- c("Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic")
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm), aes(x = x)))
)
length(ff0)
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm), aes(x = x)))
)
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = paste("Mes", y) )) # Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm), aes(x = x)))
)
range(dd$precProm)
ggplot(data.frame(x = range(dd$precProm), aes(x = x))
)
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 <- p9 +
scale_x_continuous(name = "Precipitación",
breaks = seq(0, 1, 0.2),
limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Meses")
p9
Mes <- factor(Mes, levels = Mes)
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 <- p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Accent") +
labs(colour = "Meses")
p9
Mes
?scale_color_brewer
Mes <- c("Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic")
Mes <- factor(Mes, levels = Mes)
# Dibujado de ff0
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 <- p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Set1") +
labs(colour = "Meses")
p9
?scale_color_brewer
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = Mes[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Spectral") +
labs(colour = "Meses")
p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="BrBG") +
labs(colour = "Meses")
p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="PiYG") +
labs(colour = "Meses")
p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_distiller(palette="PiYG") +
labs(colour = "Meses")
p9 +
scale_x_continuous(name = "Precipitación") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")
Mes
?guides
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses") +
guides(colour = guide_legend(order=1))
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses") +
guides(colour = guide_legend(order=2))
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses") +
guides(colour = guide_legend(order=3))
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = y))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")  #+
# guides(colour = guide_legend(order=3))
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = as.integer(y)))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")  #+
# guides(colour = guide_legend(order=3))
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = as.factor(y)))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")  #+
# guides(colour = guide_legend(order=3))
meses <- factor(1:12, levels=1:12)
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = y))
},
meses,
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")  #+
meses
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = y))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")  #+
?format
format(1:10)
format(1:10, width = 2)
formatC(1:10, digits = 2)
formatC(1:12, format = "%02d")
sprintf("%02d", 1:12)
meses <- sprintf("%02d", 1:12)
# Dibujado de ff0
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ff0[[y]],
aes_(colour = meses[y]))
},
1:length(ff0),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Meses")  #+
ggsave("FamiliaGammas.png")
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Densidad") +
ggtitle("Gammas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Mes")  #+
# guides(colour = guide_legend(order=3))
ggsave("FamiliaGammas.png")
# Ahora las acumuladas
p9 <- Reduce(
function(x, y) {
# i <- length(x$layers)+1
x + stat_function(fun = ffs[[y]],
aes_(colour = meses[y]))
},
1:length(ffs),
init = ggplot(data.frame(x = range(dd$precProm)), aes(x = x))
)
p9 +
scale_x_continuous(name = "Precipitación (mm/día)") + # ,
#breaks = seq(0, 1, 0.2),
# limits=c(0, 1)) +
scale_y_continuous(name = "Probabilidad") +
ggtitle("Gammas Acumuladas") +
scale_colour_brewer(palette="Paired") +
labs(colour = "Mes")  #+
#
ggsave("FamiliaGammasAcc.png")
sapply(6.3, ffs)
sapply(ffs, function(f) f(6.3))
x <- sapply(ffs, function(f) f(6.3))
mean(x)
source('/media/checo/7B2C787106E895ED/PROY.CONACYT/ExtrasUsumacinta.R')
getGammaParams <- function (precipitation) {
Nt <- length(precipitation)
by(precipitation, rep_len(1:12,Nt), GammaParams0)
}
getGammaParams(dd$precProm)
a <- getGammaParams(dd$precProm)
as.matrix(a)
dim(a)
getGammaParams <- function (precipitation) {
Nt <- length(precipitation)
tapply(precipitation, list(rep_len(1:12,Nt)), GammaParams0)
}
a <- getGammaParams(dd$precProm)
a
class(a)
dim(a)
getGammaParams <- function (precipitation) {
Nt <- length(precipitation)
aggregate(precipitation, list(rep_len(1:12,Nt)), GammaParams0)
}
a <- getGammaParams(dd$precProm)
a
class(a)
dim(a)
a$x
class(a$x)
a[1,]
x <- sapply(ffs, function(f) f(6.3))
x
x - 0.797
qgamma(0.797, shape = a[6,]$x.shape, scale = a[6,]$x.scale)
a[6,]
a[6,]$x$shape
a$x
qgamma(0.797, shape = a$x[6,"shape"], scale = a$x[6,"scale"])
getGammaParams <- function (precipitation) {
Nt <- length(precipitation)
aggregate(precipitation, list(rep_len(1:12,Nt)), GammaParams0)$x
}
a <- getGammaParams(dd$precProm)
a
source('/media/checo/7B2C787106E895ED/PROY.CONACYT/spi_functions.R')
myfunc = function(x,a,b,c) {
a*x*x+ b*x +c
}
#basic plot, fixed parameter a = 1, b=0, c=0
p = ggplot(data.frame(x = c(-10, 10)), aes(x))
p + stat_function(fun=function(x) { myfunc(x,1, 0, 0) } )
myfunc.parametric = function(a,b,c){
function(x) {myfunc(x,a,b,c)}
}
#using currying and the parametric function
p = ggplot(data.frame(x = c(-10, 10)), aes(x))
p + stat_function(fun=function(x) { myfunc.parametric(1, 0, 0)(x) })
myfunc.parametric = function(a,b,c){
function(x) {myfunc(x,a,b,c)}
}
#using currying and the parametric function
p = ggplot(data.frame(x = c(-10, 10)), aes(x))
p + stat_function(fun=function(x) { myfunc.parametric(1, 0, 0)(x) })
# define a parametric stat_function for plotting
function.plot.parametric = function(a, b, c) {stat_function(fun=myfunc.parametric(a, b, c))}
# one parameter a=seq(1,4)
function.plot.family=sapply(seq(1,4), function(a){a=a; function.plot.parametric(a, 0, 0)})
p = ggplot(data.frame(x = c(-10, 10)), aes(x))
for(i in function.plot.family) { p = p + i}
p
a = seq(1,4)
b = seq(-2,2)
parameters = expand.grid(a=a,b=b)
#single apply goes over all parameter rows
function.plot.family=apply(parameters, 1, function(tuple){a=tuple[1]; b=tuple[2]; function.plot.parametric(a, b, 0)})
p = ggplot(data.frame(x = c(-10, 10)), aes(x))
for(i in function.plot.family) { p = p + i}
p
source('/media/checo/7B2C787106E895ED/PROY.CONACYT/CorrPear.R')
